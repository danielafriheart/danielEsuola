@import url('https://fonts.cdnfonts.com/css/manrope');
@import url('https://fonts.cdnfonts.com/css/inter');
@import url('https://fonts.cdnfonts.com/css/clash-display');
@import url('https://fonts.cdnfonts.com/css/druk-wide-bold');


@tailwind base;
@tailwind components;
@tailwind utilities;

* {
  font-family: 'Manrope', sans-serif;
  padding: 0;
  margin: 0;
  box-sizing: border-box;
  scroll-behavior: smooth;

  /* outline: dashed 1px lightgray; */
}

body {
  scroll-snap-type: y mandatory;
  overflow-x: hidden;
  font-size: clamp(1.125rem, 2vw, 1rem) !important;
}

section {
  scroll-snap-align: start;
}

.navLink {
  mix-blend-mode: difference !important;
}

/* Animate on scroll */
h1 {
  background: linear-gradient(90deg, black, transparent);
  background-size: 200%;
  animation: reveal linear both;
  animation-timeline: view();
  background-repeat: no-repeat;
  animation-range: entry 50% cover 50%;
  background-clip: text;
  -webkit-background-clip: text;
  color: transparent;
}

/* The `@keyframes reveal` rule defines a CSS animation that gradually changes the
`background-position-x` property of an element from `200%` to `0%`. This animation creates a visual
effect where the background of the element appears to move horizontally from right to left,
revealing the content underneath it. In this specific case, the animation is applied to an `h1`
element with a gradient background, making the text appear as if it is being revealed as the
background moves. */
@keyframes reveal {
  from {
    background-position-x: 200%;
  }

  to {
    background-position-x: 0%;
  }
}

p {
  animation: fade linear both;
  animation-timeline: view();
  animation-range: entry 50% cover 50%;
  animation-duration: 1ms;
}

/* The `@keyframes fade` rule you provided is defining a CSS animation called "fade". This animation
gradually changes the opacity of an element from 0 to 1. */
@keyframes fade {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

/* Custom cursor */
.cursor {
  z-index: 10000;
  position: absolute;
  top: 0;
  left: 0;
  background-color: rgba(255, 255, 255, 0.2);
  height: 30px;
  width: 30px;
  border-radius: 50px;
  transform: translate(-50%, -50%);
  pointer-events: none;
  mix-blend-mode: difference;
  /* border: 1px solid white; */
}

.cursor::after,
.cursor::before {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background-color: black;
  height: 10px;
  width: 10px;
  border-radius: 50px;
}

.cursor::before {
  background-color: rgb(0, 0, 0);
}


.bigCursor {
  z-index: 100;
  position: absolute;
  top: 0;
  left: 0;
  border: 2px solid white;
  height: 60px;
  width: 60px;
  border-radius: 50px;
  transform: translate(-50%, -50%);
  pointer-events: none;
  mix-blend-mode: difference;
  /* background-color: rgba(255, 255, 255, 0.2); */
}

.bigCursor::after,
.bigCursor::before {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background-color: rgb(0, 0, 0);
  height: 80%;
  width: 80%;
  border-radius: 50px;
}

.bigCursor::before {
  background-color: rgb(0, 0, 0);
}

.bigCursor.click::before {
  animation: click 1s ease forwards;
  background-color: rgb(0, 0, 0);
}


/* CLick and drag  cursor ==========>>>>>>>>>> */
.clickAndDrag {
  z-index: 100;
  position: absolute;
  top: 0;
  left: 0;
  height: 90px;
  width: 90px;
  border-radius: 50px;
  transform: translate(-50%, -50%);
  pointer-events: none;
}

.clickAndDrag::after,
.clickAndDrag::before {
  content: "click and drag";
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background-color: rgb(255, 255, 255);
  height: 80%;
  width: 80%;
  border-radius: 50px;
  @apply text-[0.8em] grid place-content-center text-center font-thin p-1 text-[#000000]
}

.clickAndDrag::before {
  background-color: rgb(0, 0, 0);
}


/* changeCursorCopy */
.changeCursorCopy {
  z-index: 100;
  position: absolute;
  top: 0;
  left: 0;
  height: 90px;
  width: 90px;
  border-radius: 50px;
  transform: translate(-50%, -50%);
  pointer-events: none;
}

.changeCursorCopy::after,
.changeCursorCopy::before {
  content: "send email";
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background-color: rgb(0, 0, 0);
  height: 80%;
  width: 80%;
  border-radius: 50px;
  @apply text-[0.8em] grid place-content-center text-center font-thin p-1 text-[#000000] bg-white
}

.changeCursorCopy::before {
  background-color: rgb(0, 0, 0);
}